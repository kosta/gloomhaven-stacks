import { writeFileSync } from 'fs'

type Expansion = 'Gloomhaven' | 'Forgotten Circles' | 'Crimson Scales' | 'Trail of Ashes'
type ItemData = {
  name: string
  points: number
  expansion: Expansion
  image: string
  xws: string
}
type Refined = {
  cardId: number
  path: string
}

function itemDataFile(strings: any, items: string) {
  return `// file is auto generated by running yarn update-item-data
//prettier-ignore
const itemData = ${items} as const;
export const gloomhavenItems = itemData.reduce((acc, cur) => acc.set(cur.cardId, cur.path), new Map<number, string>())
`
}

;(async function () {
  const response = await fetch('https://raw.githubusercontent.com/any2cards/worldhaven/master/data/items.js')
  if (response.status !== 200) {
    throw new Error('could not fetch data')
  }
  const itemData: ItemData[] = await response.json()
  const refinedData = itemData
    .filter((item) => item.expansion === 'Gloomhaven' && !item.image.endsWith('-back.png'))
    .map((item) => {
      const fileName = item.image.substring(item.image.lastIndexOf('/'))
      const cardId = Number.parseInt(fileName.substring(4, 7), 10)
      const path = item.image
      return {
        cardId,
        path,
      }
    })
    .reduce((acc, cur) => acc.set(cur.cardId, cur), new Map<number, Refined>())
  const items = JSON.stringify(Array.from(refinedData.values()), null, 2)
  writeFileSync('src/cards/items-data.ts', itemDataFile`${items}`)
})()
